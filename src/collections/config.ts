/** 
    @file src/collections/config.ts
    @description - Collection Configuration
    */

    // Configure how Collections are sorted & displayed in Categories section.
    // This file is generated by the updateConfig API and will be recreated if altered in GUI
    import type { CollectionNames, Schema } from './types';

    type Category = {
        name: string;
        icon: string;
        collections: Schema[];
    };

    export function createCategories(collections: Partial<Record<CollectionNames, Schema>>): Category[] {
        return [
    {
      name: "Collections",
      icon: "bi:collection",
      collections: [
        collections.Names,
        collections.Posts,
        collections.Media,
        collections.ImageArray,
        collections.Relation,
        collections.WidgetTest
      ].filter((col): col is Schema => col !== undefined)
    },
    {
      name: "Menus",
      icon: "bi:menu-button-wide",
      collections: [
        collections.Menu
      ].filter((col): col is Schema => col !== undefined)
    },
    {
      name: "test",
      icon: "ic:baseline-image-aspect-ratio",
      collections: [

      ].filter((col): col is Schema => col !== undefined)
    },
  ];
}

